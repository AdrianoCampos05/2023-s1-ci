variables:
  DOCKER_DRIVER: overlay2

stages:
    - lint
    - test
    - build
    - release
    - deploy

lint flake8:
  stage: lint
  image:
    name: python:3.7.5-slim
    pull_policy: if-not-present
  script:
    - flake8 .
  before_script:
    - pip install --no-cache-dir --upgrade -r requirements-dev.txt

lint black:
  stage: lint
  image:
    name: python:3.7.5-slim
    pull_policy: if-not-present
  script:
    - black --check .
  before_script:
    - pip install --no-cache-dir --upgrade -r requirements-dev.txt

lint prospector:
  stage: lint
  image:
    name: python:3.7.5-slim
    pull_policy: if-not-present
  script:
    - prospector --no-autodetect
  before_script:
    - pip install --no-cache-dir --upgrade -r requirements-dev.txt

lint pip-audit:
  stage: lint
  image:
    name: python:3.7.5-slim
    pull_policy: if-not-present
  script:
    - pip-audit
  before_script:
    - pip install --no-cache-dir --upgrade -r requirements-dev.txt

test webapp:
    stage: test
    except:
        - tags
    image:
      name: python:3.7.5-slim
      pull_policy: if-not-present
    script:
        - coverage run -m pytest
        - coverage report
        - coverage xml
    before_script:
      - pip install --no-cache-dir --upgrade -r requirements-dev.txt
      - cd simple_web_app
    coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
    artifacts:
        paths:
            - coverage.xml
        reports:
            coverage_report:
                coverage_format: cobertura
                path: coverage.xml

.build webapp:
    stage: build
    except:
        - tags
    image:
      name: docker:stable
      pull_policy: if-not-present
    services:
      - name: docker:dind
    script:
        - docker build -t $docker_hub_login/simple_web_app:$CI_COMMIT_SHA .

.release webapp:
    stage: release
    except:
        - tags
    image:
      name: docker:stable
      pull_policy: if-not-present
    services:
      - name: docker:dind
    script:
        - docker tag $docker_hub_login/simple_web_app:$CI_COMMIT_SHA $docker_hub_login/simple_web_app:latest
        - docker push $docker_hub_login/simple_web_app:$CI_COMMIT_SHA
        - docker push $docker_hub_login/simple_web_app:latest
    before_script:
        - docker login -u=$docker_hub_login -p=$docker_hub_token

deploy production:
    stage: deploy
    image:
      name: curlimages/curl:7.86.0
      pull_policy: if-not-present
    when: manual
    before_script:
        - curl -fsSL https://get.deta.dev/cli.sh | sh
        - cd simple_web_app
    only:
        - main
    script:
        - ~/.deta/bin/deta deploy
    environment:
        name: production
        url: $PRODUCTION_URL

